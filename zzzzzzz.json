ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        constructed: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {
        end: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        drain: [Function: bound socketOnDrain],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause]
      },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6::::4000',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 14
      },
      _server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6::::4000',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 14
      },
      parser: HTTPParser {
        '0': [Function: bound setRequestTimeout],
        '1': [Function: parserOnHeaders],
        '2': [Function: parserOnHeadersComplete],
        '3': [Function: parserOnBody],
        '4': [Function: parserOnMessageComplete],
        '5': [Function: bound onParserExecute],
        '6': [Function: bound onParserTimeout],
        _headers: [],
        _url: '',
        socket: [Circular *1],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
      },
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *2],
      [Symbol(async_id_symbol)]: 87,
      [Symbol(kHandle)]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
        [Symbol(owner_symbol)]: [Circular *1]
      },
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        constructed: true,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: true,
        dataEmitted: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: null
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        parser: [HTTPParser],
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: [Circular *2],
        [Symbol(async_id_symbol)]: 87,
        [Symbol(kHandle)]: [TCP],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Host',
        'localhost:4000',
        'Connection',
        'keep-alive',
        'Pragma',
        'no-cache',
        'Cache-Control',
        'no-cache',
        'Upgrade-Insecure-Requests',
        '1',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.84 Safari/537.36',
        'Accept',
        'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'Sec-Fetch-Site',
        'cross-site',
        'Sec-Fetch-Mode',
        'navigate',
        'Sec-Fetch-User',
        '?1',
        'Sec-Fetch-Dest',
        'document',
        'sec-ch-ua',
        '" Not A;Brand";v="99", "Chromium";v="99", "Google Chrome";v="99"',
        'sec-ch-ua-mobile',
        '?0',
        'sec-ch-ua-platform',
        '"Windows"',
        'Referer',
        'http://127.0.0.1:5500/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'en-US,en;q=0.9'
      ],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/auth/facebook/callback?code=AQDiIkUQhzhrwpuj2fDfewFOpXnYVPh96oj4awf0ZUP1QlY6A9BZDcyrRt-06zt7nw6eZeZf_GpZVx90T6TBSt2dYk4lE-D2bGrbPC1tcK0K8fCayhN8aGyVTHtkH1l1DuzebwaRHA4cJ_u7zQSdbnIt9ApZ96HrLU6bgenQ1l0jR8OtDOXmNv6rpE04UTqMTYw0GbnMaUO06OfVKVBbY7ejO9B8a_y713dT7___NsGzHxfGQJx6SWPxybmA7zCDVZFdKY4ss7EOpk2o-m7wHdaDvf7SqG4pD61UcX7lxMHf9msBG0r5Hu3rcCi1Gk13P1GPh13TfOeIQcNI-PItkFkMqB_17yEc_Ij57vDLK-GqzfoYzLg6A3SIT_Cs-UNyi-A_BRECa7Dly7JQjxqvWRGjvQ1ce3HYWFP8AmvGIlfhWQ',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        parser: [HTTPParser],
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: [Circular *2],
        [Symbol(async_id_symbol)]: 87,
        [Symbol(kHandle)]: [TCP],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: false,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/auth/facebook/callback?code=AQDiIkUQhzhrwpuj2fDfewFOpXnYVPh96oj4awf0ZUP1QlY6A9BZDcyrRt-06zt7nw6eZeZf_GpZVx90T6TBSt2dYk4lE-D2bGrbPC1tcK0K8fCayhN8aGyVTHtkH1l1DuzebwaRHA4cJ_u7zQSdbnIt9ApZ96HrLU6bgenQ1l0jR8OtDOXmNv6rpE04UTqMTYw0GbnMaUO06OfVKVBbY7ejO9B8a_y713dT7___NsGzHxfGQJx6SWPxybmA7zCDVZFdKY4ss7EOpk2o-m7wHdaDvf7SqG4pD61UcX7lxMHf9msBG0r5Hu3rcCi1Gk13P1GPh13TfOeIQcNI-PItkFkMqB_17yEc_Ij57vDLK-GqzfoYzLg6A3SIT_Cs-UNyi-A_BRECa7Dly7JQjxqvWRGjvQ1ce3HYWFP8AmvGIlfhWQ',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?code=AQDiIkUQhzhrwpuj2fDfewFOpXnYVPh96oj4awf0ZUP1QlY6A9BZDcyrRt-06zt7nw6eZeZf_GpZVx90T6TBSt2dYk4lE-D2bGrbPC1tcK0K8fCayhN8aGyVTHtkH1l1DuzebwaRHA4cJ_u7zQSdbnIt9ApZ96HrLU6bgenQ1l0jR8OtDOXmNv6rpE04UTqMTYw0GbnMaUO06OfVKVBbY7ejO9B8a_y713dT7___NsGzHxfGQJx6SWPxybmA7zCDVZFdKY4ss7EOpk2o-m7wHdaDvf7SqG4pD61UcX7lxMHf9msBG0r5Hu3rcCi1Gk13P1GPh13TfOeIQcNI-PItkFkMqB_17yEc_Ij57vDLK-GqzfoYzLg6A3SIT_Cs-UNyi-A_BRECa7Dly7JQjxqvWRGjvQ1ce3HYWFP8AmvGIlfhWQ',
        query: 'code=AQDiIkUQhzhrwpuj2fDfewFOpXnYVPh96oj4awf0ZUP1QlY6A9BZDcyrRt-06zt7nw6eZeZf_GpZVx90T6TBSt2dYk4lE-D2bGrbPC1tcK0K8fCayhN8aGyVTHtkH1l1DuzebwaRHA4cJ_u7zQSdbnIt9ApZ96HrLU6bgenQ1l0jR8OtDOXmNv6rpE04UTqMTYw0GbnMaUO06OfVKVBbY7ejO9B8a_y713dT7___NsGzHxfGQJx6SWPxybmA7zCDVZFdKY4ss7EOpk2o-m7wHdaDvf7SqG4pD61UcX7lxMHf9msBG0r5Hu3rcCi1Gk13P1GPh13TfOeIQcNI-PItkFkMqB_17yEc_Ij57vDLK-GqzfoYzLg6A3SIT_Cs-UNyi-A_BRECa7Dly7JQjxqvWRGjvQ1ce3HYWFP8AmvGIlfhWQ',
        pathname: '/auth/facebook/callback',
        path: '/auth/facebook/callback?code=AQDiIkUQhzhrwpuj2fDfewFOpXnYVPh96oj4awf0ZUP1QlY6A9BZDcyrRt-06zt7nw6eZeZf_GpZVx90T6TBSt2dYk4lE-D2bGrbPC1tcK0K8fCayhN8aGyVTHtkH1l1DuzebwaRHA4cJ_u7zQSdbnIt9ApZ96HrLU6bgenQ1l0jR8OtDOXmNv6rpE04UTqMTYw0GbnMaUO06OfVKVBbY7ejO9B8a_y713dT7___NsGzHxfGQJx6SWPxybmA7zCDVZFdKY4ss7EOpk2o-m7wHdaDvf7SqG4pD61UcX7lxMHf9msBG0r5Hu3rcCi1Gk13P1GPh13TfOeIQcNI-PItkFkMqB_17yEc_Ij57vDLK-GqzfoYzLg6A3SIT_Cs-UNyi-A_BRECa7Dly7JQjxqvWRGjvQ1ce3HYWFP8AmvGIlfhWQ',
        href: '/auth/facebook/callback?code=AQDiIkUQhzhrwpuj2fDfewFOpXnYVPh96oj4awf0ZUP1QlY6A9BZDcyrRt-06zt7nw6eZeZf_GpZVx90T6TBSt2dYk4lE-D2bGrbPC1tcK0K8fCayhN8aGyVTHtkH1l1DuzebwaRHA4cJ_u7zQSdbnIt9ApZ96HrLU6bgenQ1l0jR8OtDOXmNv6rpE04UTqMTYw0GbnMaUO06OfVKVBbY7ejO9B8a_y713dT7___NsGzHxfGQJx6SWPxybmA7zCDVZFdKY4ss7EOpk2o-m7wHdaDvf7SqG4pD61UcX7lxMHf9msBG0r5Hu3rcCi1Gk13P1GPh13TfOeIQcNI-PItkFkMqB_17yEc_Ij57vDLK-GqzfoYzLg6A3SIT_Cs-UNyi-A_BRECa7Dly7JQjxqvWRGjvQ1ce3HYWFP8AmvGIlfhWQ',
        _raw: '/auth/facebook/callback?code=AQDiIkUQhzhrwpuj2fDfewFOpXnYVPh96oj4awf0ZUP1QlY6A9BZDcyrRt-06zt7nw6eZeZf_GpZVx90T6TBSt2dYk4lE-D2bGrbPC1tcK0K8fCayhN8aGyVTHtkH1l1DuzebwaRHA4cJ_u7zQSdbnIt9ApZ96HrLU6bgenQ1l0jR8OtDOXmNv6rpE04UTqMTYw0GbnMaUO06OfVKVBbY7ejO9B8a_y713dT7___NsGzHxfGQJx6SWPxybmA7zCDVZFdKY4ss7EOpk2o-m7wHdaDvf7SqG4pD61UcX7lxMHf9msBG0r5Hu3rcCi1Gk13P1GPh13TfOeIQcNI-PItkFkMqB_17yEc_Ij57vDLK-GqzfoYzLg6A3SIT_Cs-UNyi-A_BRECa7Dly7JQjxqvWRGjvQ1ce3HYWFP8AmvGIlfhWQ'
      },
      params: {},
      query: {
        code: 'AQDiIkUQhzhrwpuj2fDfewFOpXnYVPh96oj4awf0ZUP1QlY6A9BZDcyrRt-06zt7nw6eZeZf_GpZVx90T6TBSt2dYk4lE-D2bGrbPC1tcK0K8fCayhN8aGyVTHtkH1l1DuzebwaRHA4cJ_u7zQSdbnIt9ApZ96HrLU6bgenQ1l0jR8OtDOXmNv6rpE04UTqMTYw0GbnMaUO06OfVKVBbY7ejO9B8a_y713dT7___NsGzHxfGQJx6SWPxybmA7zCDVZFdKY4ss7EOpk2o-m7wHdaDvf7SqG4pD61UcX7lxMHf9msBG0r5Hu3rcCi1Gk13P1GPh13TfOeIQcNI-PItkFkMqB_17yEc_Ij57vDLK-GqzfoYzLg6A3SIT_Cs-UNyi-A_BRECa7Dly7JQjxqvWRGjvQ1ce3HYWFP8AmvGIlfhWQ'
      },
      res: [Circular *2],
      body: {},
      route: Route {
        path: '/auth/facebook/callback',
        stack: [Array],
        methods: [Object]
      },
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _sessionManager: SessionManager {
        _key: 'passport',
        _serializeUser: [Function: bound ]
      },
      user: {
        _id: new ObjectId("624526ccce9f0c88a63f6caf"),
        username: 'Graphic Singh',
        email: '9334931834manju@gmail.com',
        password: '$2b$08$GZSPTxZPBbmmDdyJ92Kt0Oi6xuEptRMifuc6jsg9k0zQKNDshsrgy',
        __v: 0
      },
      authInfo: {},
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: 'localhost:4000',
        connection: 'keep-alive',
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [ 'X-Powered-By', 'Express' ],
      'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ]
    }
  }